/*
*/

-------- Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES;


-------- Explore all Columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;


---------- Explore all countries our customers come from
SELECT DISTINCT country FROM gold.dim_customers;

---------Explore all Categories "the major divisions"
SELECT DISTINCT category,subcategory,product_name FROM gold.dim_products 
ORDER BY 1,2,3;


------Find the date of first and last order
SELECT
MIN(order_date) as first_order_date,
MAX(order_date) as last_order_date,
DATEDIFF(year,MIN(order_date),MAX(order_date)) AS order_range_years
FROM gold.fact_sales;

----Find youngest and oldest customer
SELECT
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(year,MIN(birthdate),GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(year,MAX(birthdate),GETDATE()) AS youngest_age
FROM gold.dim_customers;

------Find the Total Sales
SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales;

----Find how many items are sold
SELECT SUM(quantity) as total_quantity FROM gold.fact_sales;

----- Find the average selling price
SELECT AVG(price) AS avg_price FROM gold.fact_sales;

------ Find the total numbner of orders
SELECT COUNT(DISTINCT order_number) as total_orders FROM gold.fact_sales;

------- Find the total number of products
SELECT COUNT(product_key) as total_products FROM gold.dim_products;

-------- Find the total number of customers
SELECT COUNT(customer_key) as total_customers  FROM gold.dim_customers;

--------- Find the total number of customers that placed an order
SELECT COUNT(DISTINCT customer_key) as customer_ordered  FROM gold.fact_sales;


----- Generate a report that shows all key metrics of the business

SELECT 'TotalSales' AS measure_name, SUM(sales_amount) AS measure_value  FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' AS measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS measure_name, AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total no. of Orders' AS measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT ' Total no. of Products' AS measure_name, COUNT(product_key) AS measure_value FROM gold.dim_products
UNION ALL
SELECT ' Total no. of Customers' AS measure_name, COUNT(customer_key) AS measure_value FROM gold.dim_customers


-----------Find total customers by countries
SELECT country, COUNT(customer_key) as total_customers  
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-----------Find total customers by gender
SELECT gender, COUNT(customer_key) as total_customers  
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-----------Find total products by category
SELECT category, COUNT(product_key) as total_products 
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-----------What is the aveage costs in each category
SELECT category, AVG(cost) as avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC;

-----------What is the total revenue generated for each category
SELECT p.category, SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-----------Find total revenue generated by each customer
SELECT c.customer_key,c.first_name,c.last_name,SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY total_revenue DESC;

-----------What is the distribuition of sold items across countries
SELECT c.country,SUM(s.quantity) AS total_items_sold
FROM gold.fact_sales s LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_items_sold DESC;


----------Which 5 products genrate the highest revenue.

SELECT TOP 5 p.product_name, SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC;


----------What are the 5 worst performing products in terms of sales.

SELECT product_name,total_revenue FROM 
(SELECT p.product_name, SUM(s.sales_amount) AS total_revenue,ROW_NUMBER() OVER(ORDER BY  SUM(s.sales_amount)) as rank_products
FROM gold.fact_sales s LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key
GROUP BY p.product_name) t
WHERE rank_products <= 5


--------- Top 3 customers with fewest orders

SELECT TOP 3 c.customer_key,c.first_name,c.last_name,COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales s LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY total_orders;


--------- Top 10 customers generating highest revenues
SELECT TOP 10 c.customer_key,c.first_name,c.last_name,SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
GROUP BY c.customer_key,c.first_name,c.last_name
ORDER BY total_revenue DESC;
